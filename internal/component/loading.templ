package component

import (
	"strings"

	"github.com/felixbrock/prompt-grammarly/internal/app"
)

templ analysisStateMsg(dimension string, finished bool) {
	<p class="m-y-2 italic text-sm font-bold">
		if finished {
			<span class="text-green-500">FINISHED { strings.ToUpper(dimension) } ANALYSIS</span>
		} else {
			<span>ANALYZING FOR { strings.ToUpper(dimension) }...</span>
		}
	</p>
}

templ optimizationStateMsg() {
	<p class="m-y-2 italic text-sm font-bold">
		<span>OPTIMIZING PROMPT...</span>
	</p>
}

templ Loading(optimizationId string, state app.AnalysisState) {
	<div class="flex items-center justify-center h-full w-full" hx-get={ "optimizations?id=" + optimizationId } hx-swap="outerHTML" hx-trigger="every 2s">
		<div class="flex flex-col items-center gap-2">
			<img class="animate-pulse" src="/static/images/lemonai-1x.png"/>
			@analysisStateMsg("Custom Instructions", state.CustomCompleted)
			@analysisStateMsg("Contextual Richness", state.ContextualRichnessCompleted)
			@analysisStateMsg("Conciseness", state.ConcisenessCompleted)
			@analysisStateMsg("Clarity", state.ClarityCompleted)
			@analysisStateMsg("Consistency", state.ConsistencyCompleted)
			<div
				if !state.Completed() {
					class="invisible"
				}
			>
				@optimizationStateMsg()
			</div>
		</div>
	</div>
}
